# ==================================================
# Basics
# ==================================================
set -g mouse on
setw -g mode-keys vi
set -g history-limit 200000
set -g escape-time 0
set -g repeat-time 1000
set -g xterm-keys on
set -g focus-events on
set -g renumber-windows on

# ==================================================
# Terminal / Color Handling
# ==================================================
# Prefer tmux-256color if available (truecolor is enabled below).
if-shell 'infocmp -x tmux-256color >/dev/null 2>&1' \
  'set -g default-terminal "tmux-256color"' \
  'set -g default-terminal "screen-256color"'

# Truecolor & clipboard feature hints (tmux >= 3.2 uses terminal-features)
set -as terminal-features ',xterm*:clipboard,RGB'
set -as terminal-features ',xterm-ghostty:clipboard,RGB'
set -as terminal-features ',alacritty*:clipboard,RGB'
set -as terminal-features ',wezterm*:clipboard,RGB'
set -as terminal-features ',kitty*:clipboard,RGB'

# ==================================================
# Clipboard / OSC52
# ==================================================
set -g set-clipboard on
set -g allow-passthrough on  # tmux >= 3.3

# Best-effort system clipboard command (local sessions)
set -g @copy_cmd 'printf %s'  # fallback
if-shell 'command -v pbcopy >/dev/null'  'set -g @copy_cmd "pbcopy"'
if-shell 'command -v wl-copy >/dev/null' 'set -g @copy_cmd "wl-copy"'
if-shell 'command -v xclip  >/dev/null'  'set -g @copy_cmd "xclip -selection clipboard -in"'

# Copy-mode (vi) — copy to tmux buffer + OS clipboard
bind -T copy-mode-vi v      send -X begin-selection
bind -T copy-mode-vi V      send -X select-line
bind -T copy-mode-vi y      send -X copy-pipe-and-cancel "#{@copy_cmd}"
bind -T copy-mode-vi Enter  send -X copy-pipe-and-cancel "#{@copy_cmd}"
bind -T copy-mode-vi Escape send -X clear-selection

# ==================================================
# Prefix / Reload
# ==================================================
# Use the default C-b. (No unbind needed.)
set -g prefix C-b
bind r source-file "$HOME/.tmux.conf" \; display-message "tmux reloaded ✔"

# ==================================================
# Pane Navigation / Resize
# ==================================================
# Movement (with prefix)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize (with prefix, repeatable)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 3
bind -r K resize-pane -U 3
bind -r L resize-pane -R 5

# ==================================================
# Splits
# ==================================================
# Side-by-side (right)
bind \\ split-window -h
bind \| split-window -h

# Stacked (below)
bind - split-window -v
bind _ split-window -v

# ==================================================
# UI / Layout Helpers
# ==================================================
set -g base-index 1
set -g pane-base-index 1
bind = select-layout tiled   # quick rebalance

set -g visual-bell off
setw -g aggressive-resize on
set -g renumber-windows on

# ==================================================
# Theme: Statusline, Windows, Borders
# ==================================================
# Status bar
set -g status-position bottom
set -g status-interval 5
set -g status-style 'bg=default,fg=brightblack'


# Window list
set -g window-status-style         'fg=brightblack,bg=default'
set -g window-status-current-style 'fg=magenta,bold,bg=default'
set -g window-status-bell-style    'fg=red,nobold'

# center the window list (the dots)
set -g status-justify centre
set -g window-status-separator ""
set -g window-status-format         '#{?#{==:#{session_windows},1},, ● }'
set -g window-status-current-format '#{?#{==:#{session_windows},1},,#{?window_zoomed_flag, ◎ , ● }}'

# (optional) keep the middle actually centered by capping right-side length
set -g status-right ""
set -g status-left ""
set -g status-left-length  2
set -g status-right-length 2
bind s display-message -d 2000 "session: #S"

# Pane borders (avoid default blue)
set -g pane-border-style        'fg=brightblack'
set -g pane-active-border-style 'fg=magenta'

# Messages / prompts
set -g message-style 'bg=default,fg=white'

# ==================================================
# Plugins (TPM)
# ==================================================
# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'

# Only run TPM if the script exists (avoid exit 127 on fresh machines)
if-shell '[ -x "$HOME/.tmux/plugins/tpm/tpm" ]' \
  'run-shell -b "$HOME/.tmux/plugins/tpm/tpm"' \
  'display-message "TPM not found. Install with: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm; then press <prefix>I"'
